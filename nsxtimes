#!/bin/bash
if [ $# -eq 0 ]; then
	ext='ns3'
else
	ext=$1
fi
echo "Listing all $ext file start times in current directory:"
for file in ./*.$ext; do
    [[ -e "$file" ]] || continue
    # as per nsxdetails, this is probably not the smartest way of doing this...
    # but basically, we're reading in specific bits from the NSx file header and reversing to little-endian bytes
	year="$(xxd -p -l 1 -s 295 -g 2 $file)$(xxd -p -l 1 -s 294 -g 2 $file)" 
	month="$(xxd -p -l 1 -s 297 -g 2 $file)$(xxd -p -l 1 -s 296 -g 2 $file)"
	day="$(xxd -p -l 1 -s 301 -g 2 $file)$(xxd -p -l 1 -s 300 -g 2 $file)"
	hour="$(xxd -p -l 1 -s 303 -g 2 $file)$(xxd -p -l 1 -s 302 -g 2 $file)"
	minute="$(xxd -p -l 1 -s 305 -g 2 $file)$(xxd -p -l 1 -s 304 -g 2 $file)"
	second="$(xxd -p -l 1 -s 307 -g 2 $file)$(xxd -p -l 1 -s 306 -g 2 $file)"
	printf -v year "%04d" $((16#$year))
	printf -v month "%02d" $((16#$month))
	printf -v day "%02d" $((16#$day))
	printf -v hour "%02d" $((16#$hour))
	printf -v minute "%02d" $((16#$minute))
	printf -v second "%02d" $((16#$second))
	dateformat=$(date -d "$year-$month-$day $hour:$minute:$second UTC")
	echo -e "\t$file:\t$dateformat"
done