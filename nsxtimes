#!/bin/bash
# nsxtimes - a shell script to quickly read the header of Blackrock Microsystems .NS{1-5} files in the terminal
# Similar to sister-function "nsxdetails", but instead takes the path to a list of NSx files and returns basic
# details for each in turn. With no input, it will search for all .ns3 files in the current directory.
#
# Example to read all .ns5 files at /example/directory/path:
# nsxtimes /example/directory/path/*.ns5
#
# E. M. Merricks, Ph.D.
#       (Note, I'm not a shell script aficionado, I'm certain there's a better way to do a lot of this.
#        Feel free to open a pull request or let me know of smarter ways to do things in this script!)

function endian(){
    v=$1
    i=${#v}
    while [ $i -gt 0 ]; do
        i=$[$i-2]
        echo -n ${v:$i:2}
    done
    echo
}

if [ $# -eq 0 ]; then
    srch='./*.ns3'
else
    srch=$1
fi
echo "Listing start times for all files that match $srch path:"
for file in $srch; do
    [[ -e "$file" ]] || continue
    #filesize=$(wc -c < $file)
    filesize=$(stat --printf="%s" $file)
    #either of the above should work (though stat is linux-specific)
    # as per nsxdetails, this is probably not the smartest way of doing this...
    # but basically, we're reading in specific bits from the NSx file header and reversing to little-endian bytes
    filetype=$(xxd -p -l 8 $file | xxd -r -p)
    if [[ $filetype == "NEURALCD" ]] ; then
        year=$(endian $(xxd -p -l 2 -s 294 $file))
        month=$(endian $(xxd -p -l 2 -s 296 $file))
        day=$(endian $(xxd -p -l 2 -s 300 $file))
        hour=$(endian $(xxd -p -l 2 -s 302 $file))
        minute=$(endian $(xxd -p -l 2 -s 304 $file))
        second=$(endian $(xxd -p -l 2 -s 306 $file))
        printf -v year "%04d" $((16#$year))
        printf -v month "%02d" $((16#$month))
        printf -v day "%02d" $((16#$day))
        printf -v hour "%02d" $((16#$hour))
        printf -v minute "%02d" $((16#$minute))
        printf -v second "%02d" $((16#$second))
        dateformat=$(date -d "$year-$month-$day $hour:$minute:$second UTC")
        echo -e "\t$file:\t$dateformat"
    elif [[ $filetype == "NEURALSG" ]] ; then
        timeres=30000
        period=$(xxd -p -l 4 -s 24 $file)
        period=$(endian $period)
        if [ $period -eq 0 ] ; then
            echo -e "\t$file:\tperiod was zero"
            continue
        fi
        fs=$(($timeres/$period))

        chancount=$(xxd -p -l 4 -s 28 $file)
        chancount=$(endian $chancount)
        chancount=$((16#$chancount))

        datastart=$((8+16+4+4+4*$chancount))
        totdatapoints=$(($filesize-$datastart))

        if [ $chancount -eq 0 ] ; then
            echo -e "\t$file:\tNo channels"
            continue
        fi
        totdatapoints=$(($totdatapoints/($chancount*2)))

        if [ $fs -eq 0 ] ; then
            echo -e "\t$file:\tFs was zero"
            continue
        fi

        totseconds=$(($totdatapoints/$fs))

        echo -e "\t$file:\t(NEURALSG)\t$totseconds seconds"
    fi
done
